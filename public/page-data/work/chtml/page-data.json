{"componentChunkName":"component---src-templates-project-jsx","path":"/work/chtml","result":{"data":{"prismic":{"allProjects":{"edges":[{"node":{"project_title":[{"type":"heading1","text":"HTML Validator","spans":[]}],"project_preview_description":[{"type":"paragraph","text":"A simple HTML file validator that look for markup errors in HTML file.","spans":[]}],"project_preview_thumbnail":{"dimensions":{"width":1000,"height":497},"alt":null,"copyright":null,"url":"https://images.prismic.io/satyamportfolio/c11ab945-00fe-4df6-816a-9b6329a4bcf5_Capture.PNG?auto=compress,format"},"project_category":[{"type":"heading5","text":"C++","spans":[]}],"project_post_date":"2020-07-19","project_hero_image":{"dimensions":{"width":1000,"height":497},"alt":null,"copyright":null,"url":"https://images.prismic.io/satyamportfolio/c11ab945-00fe-4df6-816a-9b6329a4bcf5_Capture.PNG?auto=compress,format"},"project_description":[{"type":"heading2","text":"Features","spans":[]},{"type":"list-item","text":"Program will validate HTML file based of opening and closing tags and self closing tags","spans":[]},{"type":"list-item","text":"Check the file based of the grammar rules of HTML","spans":[]},{"type":"heading2","text":"How to use","spans":[]},{"type":"list-item","text":"Simple compile the program validator.cpp using c++11 compiler","spans":[{"start":27,"end":40,"type":"hyperlink","data":{"link_type":"Web","url":"https://github.com/satyammahajan46/HTML-Validator/blob/master/validator.cpp"}}]},{"type":"list-item","text":"Run the program","spans":[]},{"type":"list-item","text":"Enter the file name with .html as extension","spans":[]},{"type":"list-item","text":"See the result's","spans":[]},{"type":"heading3","text":"Challenges & Solutions","spans":[]},{"type":"heading4","text":"Recursive approach","spans":[]},{"type":"paragraph","text":"The main goal was to validate the HTML file and provide appropriate error with the line number","spans":[]},{"type":"paragraph","text":"The solution was very simple, follow recursive to parse the file and use a stack to keep track of HTML tags.","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"How it works","spans":[]},{"type":"paragraph","text":"The program parses the file and looks for the HTML tags, The tags are placed in a stack, and the program uses a recursive approach to generate the error if next closing tag doesn't match the last opening tag.","spans":[]}],"_meta":{"uid":"chtml"}}}]}},"site":{"siteMetadata":{"title":"Portfolio","description":"My personal portfolio and blog","author":"Satyam Mahajan"}}},"pageContext":{"uid":"chtml","rootQuery":"\n    query ProjectQuery($uid: String) {\n        prismic {\n            allProjects(uid: $uid) {\n                edges {\n                    node {\n                        project_title\n                        project_preview_description\n                        project_preview_thumbnail\n                        project_category\n                        project_post_date\n                        project_hero_image\n                        project_description\n                        _meta {\n                            uid\n                        }\n                    }\n                }\n            }\n        }\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n"}},"staticQueryHashes":["3649515864"]}