{"version":3,"sources":["webpack:///./src/components/ProjectCard.jsx","webpack:///./src/components/About.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/_ui/Button.jsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["ProjectCardContainer","Link","dimensions","maxwidthTablet","maxwidthMobile","colors","blue500","ProjectCardContent","ProjectCardCategory","grey600","ProjectCardTitle","ProjectCardBlurb","ProjectCardAction","ProjectCardImageContainer","grey200","ProjectCard","category","title","description","thumbnail","uid","to","className","text","RichText","render","src","url","alt","AboutContainer","AboutLinkContainer","AboutLink","AboutBio","AboutActions","About","bio","socialLinks","map","social","i","key","href","about_link","spans","data","target","rel","Button","Hero","orange500","purple500","green500","teal500","blue600","blue200","orange600","orange200","purple600","purple200","green600","green200","teal600","teal200","Section","WorkAction","RenderBody","home","projects","meta","titleTemplate","name","content","property","author","concat","hero_title","hero_button_link","hero_button_text","project","node","project_category","project_title","project_preview_description","project_preview_thumbnail","_meta","about_title","about_bio","about_links","query","doc","prismic","allHomepages","edges","slice","pop","allProjects","site","siteMetadata","Layout","ButtonContainer","blue400","pink400","purple400","blue300","this","props","children","source","excluded","sourceKeys","Object","keys","length","indexOf","onClick","Component"],"mappings":"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","file":"component---src-pages-index-js-c48d816bcc2fd32127d6.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { RichText } from \"prismic-reactjs\";\r\nimport styled from \"@emotion/styled\";\r\nimport dimensions from \"styles/dimensions\";\r\nimport colors from \"styles/colors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProjectCardContainer = styled(Link)`\r\n    display: grid;\r\n    grid-template-columns: 4fr 7fr;\r\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\r\n    margin-bottom: 4em;\r\n    transition: all 150ms ease-in-out;\r\n    text-decoration: none;\r\n    color: currentColor;\r\n\r\n    @media(max-width:950px) {\r\n        grid-template-columns: 4.5fr 7fr;\r\n    }\r\n\r\n    @media(max-width:${dimensions.maxwidthTablet}px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n    @media(max-width:${dimensions.maxwidthMobile}px) {\r\n        margin-bottom: 2em;\r\n    }\r\n\r\n    &:hover {\r\n        box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\r\n        transition: all 150ms ease-in-out;\r\n\r\n        .ProjectCardAction {\r\n            color: ${colors.blue500};\r\n            transition: all 150ms ease-in-out;\r\n\r\n            span {\r\n                transform: translateX(0px);\r\n                opacity: 1;\r\n                transition: transform 150ms ease-in-out;\r\n            }\r\n        }\r\n\r\n        .ProjectCardContent::before {\r\n            opacity: 0.02;\r\n            transition: all 150ms ease-in-out;\r\n        }\r\n\r\n        .ProjectCardImageContainer::before {\r\n            opacity: 0.2;\r\n            transition: all 150ms ease-in-out;\r\n        }\r\n    }\r\n`\r\n\r\nconst ProjectCardContent = styled(\"div\")`\r\n    background: white;\r\n    padding: 4em 3em 2.25em 3em;\r\n    position: relative;\r\n\r\n    &:before {\r\n        position: absolute;\r\n        content: \"\";\r\n        width: 100%;\r\n        height: 100%;\r\n        left: 0;\r\n        top: 0;\r\n        background: ${colors.blue500};\r\n        mix-blend-mode: multiply;\r\n        opacity: 0;\r\n        transition: all 150ms ease-in-out;\r\n    }\r\n\r\n    @media(max-width:950px) {\r\n        padding: 3.25em 2.5em 2em 2.5em;\r\n    }\r\n\r\n    @media(max-width:${dimensions.maxwidthTablet}px) {\r\n        grid-row: 2;\r\n    }\r\n`\r\n\r\nconst ProjectCardCategory = styled(\"h6\")`\r\n    font-weight: 600;\r\n    color: ${colors.grey600};\r\n`\r\n\r\nconst ProjectCardTitle = styled(\"h3\")`\r\n    margin-bottom: 0.5em;\r\n    margin-top: 0.5em;\r\n`\r\n\r\nconst ProjectCardBlurb = styled(\"div\")`\r\n    margin-bottom: 0.5em;\r\n    margin-top: 0.5em;\r\n    margin-bottom: 5em;\r\n\r\n    @media(max-width:${dimensions.maxwidthTablet}px) {\r\n        margin-bottom: 2.5em;\r\n    }\r\n`\r\n\r\nconst ProjectCardAction = styled(\"div\")`\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n    color: currentColor;\r\n    transition: all 150ms ease-in-out;\r\n\r\n    span {\r\n        margin-left: 1em;\r\n        transform: translateX(-8px);\r\n        display: inline-block;\r\n        transition: transform 400ms ease-in-out;\r\n    }\r\n`\r\n\r\nconst ProjectCardImageContainer = styled(\"div\")`\r\n    background: ${colors.grey200};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    overflow: hidden;\r\n    position: relative;\r\n    padding-left: 2em;\r\n    padding-right: 2em;\r\n\r\n    @media(max-width:${dimensions.maxwidthTablet}px) {\r\n        padding-top: 3em;\r\n        max-height: 200px;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    &:before {\r\n        position: absolute;\r\n        content: \"\";\r\n        width: 100%;\r\n        height: 100%;\r\n        left: 0;\r\n        top: 0;\r\n        background: ${colors.blue500};\r\n        mix-blend-mode: multiply;\r\n        opacity: 0;\r\n        transition: all 150ms ease-in-out;\r\n    }\r\n\r\n    img {\r\n        max-width: 400px;\r\n        width: 100%;\r\n        box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.04);\r\n\r\n        @media(max-width:${dimensions.maxwidthTablet}px) {\r\n            max-width: 300px;\r\n        }\r\n    }\r\n`\r\n\r\nconst ProjectCard = ({ category, title, description, thumbnail, uid}) => (\r\n    <ProjectCardContainer to={`/work/${uid}`}>\r\n        <ProjectCardContent className=\"ProjectCardContent\">\r\n            <ProjectCardCategory>\r\n                {category[0].text}\r\n            </ProjectCardCategory>\r\n            <ProjectCardTitle>\r\n                {title[0].text}\r\n            </ProjectCardTitle>\r\n            <ProjectCardBlurb>\r\n                {RichText.render(description)}\r\n            </ProjectCardBlurb>\r\n            <ProjectCardAction className=\"ProjectCardAction\">\r\n                Details <span>&#8594;</span>\r\n            </ProjectCardAction>\r\n        </ProjectCardContent>\r\n        <ProjectCardImageContainer className=\"ProjectCardImageContainer\">\r\n            <img src={thumbnail.url} alt={title[0].text}/>\r\n        </ProjectCardImageContainer>\r\n    </ProjectCardContainer>\r\n)\r\n\r\nexport default ProjectCard;\r\n\r\nProjectCard.propTypes = {\r\n    category: PropTypes.array.isRequired,\r\n    thumbnail: PropTypes.object.isRequired,\r\n    title: PropTypes.array.isRequired,\r\n    description: PropTypes.array.isRequired,\r\n    uid: PropTypes.string.isRequired\r\n}","import React from \"react\";\r\nimport Button from \"components/_ui/Button\";\r\nimport styled from \"@emotion/styled\";\r\nimport dimensions from \"styles/dimensions\";\r\nimport { RichText } from \"prismic-reactjs\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AboutContainer = styled(\"div\")`\r\n    padding-top: 1em;\r\n    display: grid;\r\n    grid-template-columns: 8em 1fr 8em;\r\n    grid-gap: 3em;\r\n\r\n    @media(max-width: ${dimensions.maxwidthTablet}px) {\r\n        grid-template-columns: 1fr 3fr 1fr;\r\n    }\r\n\r\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\r\n        grid-template-columns: 7em 1fr;\r\n        grid-template-rows: 3em 1fr;\r\n        grid-gap: 2em;\r\n    }\r\n`\r\n\r\nconst AboutLinkContainer = styled(\"div\")`\r\n    padding-top: 1em;\r\n    padding-bottom: 3em;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\r\n        grid-row: 2;\r\n    }\r\n`\r\n\r\nconst AboutLink = styled(\"a\")`\r\n    margin-bottom: 1.5em;\r\n    font-weight: 600;\r\n    line-height: 1.9;\r\n    text-decoration: none;\r\n    color: currentColor;\r\n\r\n    span {\r\n        margin-left: 1em;\r\n        transform: translateX(-8px);\r\n        display: inline-block;\r\n        opacity: 0;\r\n        transition: all 400ms ease-in-out;\r\n    }\r\n\r\n    &:hover {\r\n        span {\r\n            transform: translateX(0px);\r\n            opacity: 1;\r\n            transition: all 150ms ease-in-out;\r\n        }\r\n    }\r\n`\r\n\r\nconst AboutBio = styled(\"div\")`\r\n    padding-bottom: 3em;\r\n    max-width: 480px;\r\n\r\n\r\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\r\n        grid-row: 2;\r\n    }\r\n`\r\n\r\nconst AboutActions = styled(\"div\")`\r\n    padding-top: 1em;\r\n    padding-bottom: 3em;\r\n\r\n\r\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\r\n        padding: 0;\r\n        grid-column: 1 / -1;\r\n        grid-row: 1;\r\n    }\r\n`\r\n\r\n\r\nconst About = ({ bio, socialLinks }) => (\r\n    <AboutContainer>\r\n        <AboutLinkContainer>\r\n            {socialLinks.map((social, i) => (\r\n                <AboutLink\r\n                    key={i}\r\n                    href={social.about_link[0].spans[0].data.url}\r\n                    target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {social.about_link[0].text}\r\n                    <span>&#8594;</span>\r\n                </AboutLink>\r\n            ))}\r\n        </AboutLinkContainer>\r\n        <AboutBio>\r\n            {RichText.render(bio)}\r\n        </AboutBio>\r\n        <AboutActions>\r\n            <a href=\"mailto:satyammahajan46@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <Button className=\"Button--secondary\">\r\n                    Email me\r\n                </Button>\r\n            </a>\r\n        </AboutActions>\r\n    </AboutContainer>\r\n)\r\n\r\nexport default About;\r\n\r\nAbout.propTypes = {\r\n    bio: PropTypes.array.isRequired,\r\n    socialLinks: PropTypes.array.isRequired,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { RichText } from \"prismic-reactjs\";\r\nimport { graphql, Link } from \"gatsby\";\r\nimport styled from \"@emotion/styled\";\r\nimport colors from \"styles/colors\";\r\nimport dimensions from \"styles/dimensions\";\r\nimport Button from \"components/_ui/Button\";\r\nimport About from \"components/About\";\r\nimport Layout from \"components/Layout\";\r\nimport ProjectCard from \"components/ProjectCard\";\r\n\r\nconst Hero = styled(\"div\")`\r\n    padding-top: 2.5em;\r\n    padding-bottom: 3em;\r\n    margin-bottom: 6em;\r\n    max-width: 830px;\r\n\r\n    @media(max-width:${dimensions.maxwidthMobile}px) {\r\n       margin-bottom: 3em;\r\n    }\r\n\r\n    h1 {\r\n        margin-bottom: 1em;\r\n\r\n        a {\r\n            text-decoration: none;\r\n            transition: all 100ms ease-in-out;\r\n\r\n            &:nth-of-type(1) { color: ${colors.blue500}; }\r\n            &:nth-of-type(2) { color: ${colors.orange500}; }\r\n            &:nth-of-type(3) { color: ${colors.purple500}; }\r\n            &:nth-of-type(4) { color: ${colors.green500}; }\r\n            &:nth-of-type(5) { color: ${colors.teal500}; }\r\n\r\n            &:hover {\r\n                cursor: pointer;\r\n                transition: all 100ms ease-in-out;\r\n\r\n                &:nth-of-type(1) { color: ${colors.blue600};    background-color: ${colors.blue200};}\r\n                &:nth-of-type(2) { color: ${colors.orange600};  background-color: ${colors.orange200};}\r\n                &:nth-of-type(3) { color: ${colors.purple600};  background-color: ${colors.purple200};}\r\n                &:nth-of-type(4) { color: ${colors.green600};   background-color: ${colors.green200};}\r\n                &:nth-of-type(5) { color: ${colors.teal600};    background-color: ${colors.teal200};}\r\n\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Section = styled(\"div\")`\r\n    margin-bottom: 10em;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    @media(max-width:${dimensions.maxwidthTablet}px) {\r\n        margin-bottom: 4em;\r\n    }\r\n\r\n    &:last-of-type {\r\n        margin-bottom: 0;\r\n    }\r\n`\r\n\r\nconst WorkAction = styled(Link)`\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n    color: currentColor;\r\n    transition: all 150ms ease-in-out;\r\n    margin-left: auto;\r\n\r\n    @media(max-width:${dimensions.maxwidthTablet}px) {\r\n       margin: 0 auto;\r\n    }\r\n\r\n    span {\r\n        margin-left: 1em;\r\n        transform: translateX(-8px);\r\n        display: inline-block;\r\n        transition: transform 400ms ease-in-out;\r\n    }\r\n\r\n    &:hover {\r\n        color: ${colors.blue500};\r\n        transition: all 150ms ease-in-out;\r\n\r\n        span {\r\n            transform: translateX(0px);\r\n            opacity: 1;\r\n            transition: transform 150ms ease-in-out;\r\n        }\r\n    }\r\n`\r\n\r\nconst RenderBody = ({ home, projects, meta }) => (\r\n    <>\r\n        <Helmet\r\n            title={meta.title}\r\n            titleTemplate={`%s`}\r\n            meta={[\r\n                {\r\n                    name: `description`,\r\n                    content: meta.description,\r\n                },\r\n                {\r\n                    property: `og:title`,\r\n                    content: meta.title,\r\n                },\r\n                {\r\n                    property: `og:description`,\r\n                    content: meta.description,\r\n                },\r\n                {\r\n                    property: `og:type`,\r\n                    content: `website`,\r\n                },\r\n                {\r\n                    name: `twitter:card`,\r\n                    content: `summary`,\r\n                },\r\n                {\r\n                    name: `twitter:creator`,\r\n                    content: meta.author,\r\n                },\r\n                {\r\n                    name: `twitter:title`,\r\n                    content: meta.title,\r\n                },\r\n                {\r\n                    name: `twitter:description`,\r\n                    content: meta.description,\r\n                },\r\n            ].concat(meta)}\r\n        />\r\n        <Hero>\r\n            <>\r\n                {RichText.render(home.hero_title)}\r\n            </>\r\n            <a href={home.hero_button_link.url}\r\n               target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <Button>\r\n                    {RichText.render(home.hero_button_text)}\r\n                </Button>\r\n            </a>\r\n        </Hero>\r\n        <Section>\r\n            {projects.map((project, i) => (\r\n                <ProjectCard\r\n                    key={i}\r\n                    category={project.node.project_category}\r\n                    title={project.node.project_title}\r\n                    description={project.node.project_preview_description}\r\n                    thumbnail={project.node.project_preview_thumbnail}\r\n                    uid={project.node._meta.uid}\r\n                />\r\n            ))}\r\n            <WorkAction to={\"/work\"}>\r\n                See more work <span>&#8594;</span>\r\n            </WorkAction>\r\n        </Section>\r\n        <Section>\r\n            {RichText.render(home.about_title)}\r\n            <About\r\n                bio={home.about_bio}\r\n                socialLinks={home.about_links}\r\n            />\r\n        </Section>\r\n    </>\r\n);\r\n\r\nexport default ({ data }) => {\r\n    //Required check for no data being returned\r\n    const doc = data.prismic.allHomepages.edges.slice(0, 1).pop();\r\n    const projects = data.prismic.allProjects.edges;\r\n    const meta = data.site.siteMetadata;\r\n\r\n    if (!doc || !projects) return null;\r\n\r\n    return (\r\n        <Layout>\r\n            <RenderBody home={doc.node} projects={projects} meta={meta}/>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nRenderBody.propTypes = {\r\n    home: PropTypes.object.isRequired,\r\n    projects: PropTypes.array.isRequired,\r\n    meta: PropTypes.object.isRequired,\r\n};\r\n\r\nexport const query = graphql`\r\n    {\r\n        prismic {\r\n            allHomepages {\r\n                edges {\r\n                    node {\r\n                        hero_title\r\n                        hero_button_text\r\n                        hero_button_link {\r\n                            ... on PRISMIC__ExternalLink {\r\n                                _linkType\r\n                                url\r\n                            }\r\n                        }\r\n                         content\r\n                        about_title\r\n                        about_bio\r\n                        about_links {\r\n                            about_link\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            allProjects (sortBy: project_post_date_DESC) {\r\n                edges {\r\n                    node {\r\n                        project_title\r\n                        project_preview_description\r\n                        project_preview_thumbnail\r\n                        project_category\r\n                        project_post_date\r\n                        _meta {\r\n                            uid\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                description\r\n                author\r\n            }\r\n        }\r\n    }\r\n`","import React, { Component } from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport colors from \"styles/colors\";\r\nimport dimensions from \"styles/dimensions\";\r\n\r\nconst ButtonContainer = styled(\"button\")`\r\n    padding: 1em 2em;\r\n    background: ${colors.blue400};\r\n    font-weight: 600;\r\n    color: white;\r\n    outline: none;\r\n    border: none;\r\n    font-size: 1rem;\r\n    border-radius: 2px;\r\n    position: relative;\r\n    transition: background 100ms ease-in-out;\r\n\r\n    @media(max-width:${dimensions.maxwidthMobile}px) {\r\n        padding: 0.8em 1.8em;\r\n        font-size: 1em;\r\n    }\r\n\r\n    p {\r\n        margin: 0;\r\n    }\r\n\r\n    &:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: linear-gradient(135deg, ${colors.pink400} 0%, ${colors.purple400} 100%);\r\n        z-index: -1;\r\n    }\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        background: transparent;\r\n        transition: background 100ms ease-in-out;\r\n    }\r\n\r\n    &.Button--secondary {\r\n        background: ${colors.blue200};\r\n        color: ${colors.blue600};\r\n        padding: 0.95em 1.8em;\r\n        font-size: 0.95rem;\r\n\r\n        &:hover {\r\n            background: ${colors.blue300};\r\n            transition: background 100ms ease-in-out;\r\n        }\r\n    }\r\n`\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        const { children, ...props } = this.props;\r\n        return (\r\n            <ButtonContainer\r\n                onClick={this.props.onClick}\r\n                {...props}>\r\n                {this.props.children}\r\n            </ButtonContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}